{"version":3,"sources":["Redux/Actions/ActionTypes.js","container/todoList/todo.js","Redux/Actions/TodoActions.js","App.js","Redux/Store/InitialState.js","Redux/Reducers/TodoReducer.js","Redux/Reducers/PostTodoReducer.js","Redux/Reducers/DeleteTodoReducer.js","Redux/Reducers/UpdateReducer.js","Redux/Reducers/GetTodoReducer.js","Redux/Reducers/RootReducer.js","Redux/Store/store.js","reportWebVitals.js","index.js"],"names":["ActionTypes","FETCH_TODO_LOADING","FETCH_TODO_SUCCESS","FETCH_TODO_FAILURE","POST_TODO_LOADING","POST_TODO_SUCCESS","POST_TODO_FAILURE","DELETE_TODO_LOADING","DELETE_TODO_SUCCESS","DELETE_TODO_FAILURE","UPDATE_TODO_LOADING","UPDATE_TODO_SUCCESS","UPDATE_TODO_FAILURE","GET_TODO_LOADING","GET_TODO_SUCCESS","GET_TODO_FAILURE","Todo","dispatch","useDispatch","state","useSelector","useEffect","id","a","type","axios","method","url","headers","token","response","payload","data","error","console","log","className","App","InitialState","items","loading","TodoReducer","INITIAL_STATE","action","initialStatePost","item","PostTodoReducer","message","DeleteTodoReducer","UpdateTodoReducer","initialState","GetTodoReducer","RootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc6eb6b2.chunk.js","sourcesContent":["const ActionTypes = {\n  FETCH_TODO_LOADING: 'FETCH_TODO_LOADING',\n  FETCH_TODO_SUCCESS: 'FETCH_TODO_SUCCESS',\n  FETCH_TODO_FAILURE: 'FETCH_TODO_FAILURE',\n  POST_TODO_LOADING: 'POST_TODO_LOADING',\n  POST_TODO_SUCCESS: 'POST_TODO_SUCCESS',\n  POST_TODO_FAILURE: 'POST_TODO_FAILURE',\n  DELETE_TODO_LOADING: 'DELETE_TODO_LOADING',\n  DELETE_TODO_SUCCESS: 'DELETE_TODO_SUCCESS',\n  DELETE_TODO_FAILURE: 'DELETE_TODO_FAILURE',\n  UPDATE_TODO_LOADING: 'UPDATE_TODO_LOADING',\n  UPDATE_TODO_SUCCESS: 'UPDATE_TODO_SUCCESS',\n  UPDATE_TODO_FAILURE: 'UPDATE_TODO_FAILURE',\n  GET_TODO_LOADING: 'GET_TODO_LOADING',\n  GET_TODO_SUCCESS: 'GET_TODO_SUCCESS',\n  GET_TODO_FAILURE: 'GET_TODO_FAILURE',\n};\n\nexport default ActionTypes;\n","/* eslint-disable no-console */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetTodo } from '../../Redux/Actions/TodoActions';\n\nconst Todo = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(GetTodo(5));\n  }, []);\n\n  console.log('#################');\n  console.log(state);\n  console.log('###############');\n  return (\n    <div className=\"App\">\n      working\n    </div>\n  );\n};\n\nexport default Todo;\n","import axios from 'axios';\nimport ActionTypes from './ActionTypes';\n\nexport const fetchTodoData = () => async (dispatch) => {\n  dispatch({ type: ActionTypes.FETCH_TODO_LOADING });\n\n  try {\n    const response = await axios.get('https://boiling-shelf-13431.herokuapp.com/api/v1/todos',\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          token: 'eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxfQ.DiPWrOKsx3sPeVClrm_j07XNdSYHgBa3Qctosdxax3w',\n        },\n      });\n    dispatch({ type: ActionTypes.FETCH_TODO_SUCCESS, payload: response.data });\n  } catch (error) {\n    dispatch({ type: ActionTypes.FETCH_TODO_FAILURE, error });\n  }\n};\n\nexport const postTodo = (obj) => async (dispatch) => {\n  dispatch({ type: ActionTypes.POST_TODO_LOADING });\n\n  try {\n    const response = await axios({\n      method: 'post',\n      url: 'https://boiling-shelf-13431.herokuapp.com/api/v1/todos',\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxfQ.DiPWrOKsx3sPeVClrm_j07XNdSYHgBa3Qctosdxax3w',\n      },\n      data: obj,\n    });\n    dispatch({ type: ActionTypes.POST_TODO_SUCCESS, payload: response.data });\n  } catch (error) {\n    dispatch({ type: ActionTypes.POST_TODO_FAILURE, error });\n  }\n};\n\nexport const DeleteTodo = (id) => async (dispatch) => {\n  dispatch({ type: ActionTypes.DELETE_TODO_LOADING });\n\n  try {\n    const response = await axios({\n      method: 'delete',\n      url: `https://boiling-shelf-13431.herokuapp.com/api/v1/todos/${id}`,\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxfQ.DiPWrOKsx3sPeVClrm_j07XNdSYHgBa3Qctosdxax3w',\n      },\n    });\n    dispatch({ type: ActionTypes.DELETE_TODO_SUCCESS, payload: response.data });\n  } catch (error) {\n    dispatch({ type: ActionTypes.DELETE_TODO_FAILURE, error });\n  }\n};\n\nexport const UpdateTodo = (id, obj) => async (dispatch) => {\n  dispatch({ type: ActionTypes.UPDATE_TODO_LOADING });\n\n  try {\n    const response = await axios({\n      method: 'put',\n      url: `https://boiling-shelf-13431.herokuapp.com/api/v1/todos/${id}`,\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxfQ.DiPWrOKsx3sPeVClrm_j07XNdSYHgBa3Qctosdxax3w',\n      },\n      data: obj,\n    });\n    dispatch({ type: ActionTypes.UPDATE_TODO_SUCCESS, payload: response.data });\n  } catch (error) {\n    dispatch({ type: ActionTypes.UPDATE_TODO_FAILURE, error });\n  }\n};\n\nexport const GetTodo = (id) => async (dispatch) => {\n  dispatch({ type: ActionTypes.GET_TODO_LOADING });\n\n  try {\n    const response = await axios({\n      method: 'get',\n      url: `https://boiling-shelf-13431.herokuapp.com/api/v1/todos/${id}`,\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxfQ.DiPWrOKsx3sPeVClrm_j07XNdSYHgBa3Qctosdxax3w',\n      },\n    });\n    dispatch({ type: ActionTypes.GET_TODO_SUCCESS, payload: response.data });\n  } catch (error) {\n    dispatch({ type: ActionTypes.GET_TODO_FAILURE, error });\n  }\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport Todo from './container/todoList/todo';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const InitialState = {\n  items: [],\n  loading: false,\n  error: null,\n};\n\nexport default InitialState;\n","import ActionTypes from '../Actions/ActionTypes';\nimport INITIAL_STATE from '../Store/InitialState';\n\nconst TodoReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_TODO_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ActionTypes.FETCH_TODO_SUCCESS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: true,\n      };\n    case ActionTypes.FETCH_TODO_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default: return state;\n  }\n};\n\nexport default TodoReducer;\n","import ActionTypes from '../Actions/ActionTypes';\n\nconst initialStatePost = {\n  item: {},\n  loading: false,\n  error: null,\n};\n\nconst PostTodoReducer = (state = initialStatePost, action) => {\n  switch (action.type) {\n    case ActionTypes.POST_TODO_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ActionTypes.POST_TODO_SUCCESS:\n      return {\n        ...state,\n        item: action.payload,\n        loading: true,\n      };\n    case ActionTypes.POST_TODO_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default: return state;\n  }\n};\n\nexport default PostTodoReducer;\n","import ActionTypes from '../Actions/ActionTypes';\n\nconst initialStatePost = {\n  message: null,\n  loading: false,\n  error: null,\n};\n\nconst DeleteTodoReducer = (state = initialStatePost, action) => {\n  switch (action.type) {\n    case ActionTypes.DELETE_TODO_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ActionTypes.DELETE_TODO_SUCCESS:\n      return {\n        ...state,\n        message: action.payload,\n        loading: true,\n      };\n    case ActionTypes.DELETE_TODO_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default: return state;\n  }\n};\n\nexport default DeleteTodoReducer;\n","import ActionTypes from '../Actions/ActionTypes';\n\nconst initialStatePost = {\n  message: null,\n  loading: false,\n  error: null,\n};\n\nconst UpdateTodoReducer = (state = initialStatePost, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_TODO_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ActionTypes.UPDATE_TODO_SUCCESS:\n      return {\n        ...state,\n        message: action.payload,\n        loading: true,\n      };\n    case ActionTypes.UPDATE_TODO_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default: return state;\n  }\n};\n\nexport default UpdateTodoReducer;\n","import ActionTypes from '../Actions/ActionTypes';\n\nconst initialState = {\n  message: null,\n  loading: false,\n  error: null,\n};\n\nconst GetTodoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_TODO_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ActionTypes.GET_TODO_SUCCESS:\n      return {\n        ...state,\n        item: action.payload,\n        loading: true,\n      };\n    case ActionTypes.GET_TODO_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default: return state;\n  }\n};\n\nexport default GetTodoReducer;\n","import { combineReducers } from 'redux';\nimport TodoReducer from './TodoReducer';\nimport PostTodoReducer from './PostTodoReducer';\nimport DeleteTodoReducer from './DeleteTodoReducer';\nimport UpdateTodoReducer from './UpdateReducer';\nimport GetTodoReducer from './GetTodoReducer';\n\nconst RootReducer = combineReducers({\n  TodoReducer,\n  PostTodoReducer,\n  DeleteTodoReducer,\n  UpdateTodoReducer,\n  GetTodoReducer,\n});\n\nexport default RootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport RootReducer from '../Reducers/RootReducer';\n\nconst store = createStore(\n  RootReducer,\n  applyMiddleware(thunk, logger),\n);\n\nexport default store;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/Store/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}